{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19496\\\\flyr\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useDispatch } from 'react-redux';\nimport { GoogleLogin } from 'react-google-login';\nimport { useNavigate } from 'react-router-dom';\nimport useStyles from './styles';\nimport Input from './input';\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  const classes = useStyles();\n  const {\n    showPassword,\n    setShowPassword\n  } = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(formData, navigate));\n    } else {\n      dispatch(signin(formData, navigate));\n    }\n  };\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  }; // check login later, 3:23:00, authentication\n\n\n  const googleSuccess = async res => {\n    // ?. speical operator that doesn't throw an erorr if we dont get res object\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      navigate.pushState('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Google Sign In was unsuccessful. Please try again later\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"981858319825-08s6umh6ffml64ufs60qqjpev3uu0atk.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 44\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"))))));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","useDispatch","GoogleLogin","useNavigate","useStyles","Input","Icon","signin","signup","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","formData","setFormData","dispatch","navigate","handleShowPassword","handleChange","e","target","name","value","handleSubmit","preventDefault","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","pushState","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"sources":["C:/Users/19496/flyr/client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Avatar, Button, Paper, Grid, Typography, Container, } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { useDispatch } from 'react-redux';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport useStyles from './styles';\r\nimport Input from './input';\r\nimport Icon from './icon';\r\nimport { signin, signup } from '../../actions/auth';\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\r\n\r\nconst Auth = () => {\r\n    const classes = useStyles();\r\n    const {showPassword, setShowPassword} = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const [formData, setFormData] = useState();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (isSignup) {\r\n            dispatch(signup(formData, navigate));\r\n        } else {\r\n            dispatch(signin(formData, navigate));\r\n        }\r\n    };\r\n\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup);\r\n        handleShowPassword(false);\r\n    };\r\n\r\n    // check login later, 3:23:00, authentication\r\n    const googleSuccess = async (res) => {\r\n        // ?. speical operator that doesn't throw an erorr if we dont get res object\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n        try {\r\n            dispatch({ type: 'AUTH', data: { result, token } });\r\n            navigate.pushState('/');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    \r\n    const googleFailure = (error) => {\r\n        console.log(error);\r\n        console.log(\"Google Sign In was unsuccessful. Please try again later\");\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography variant=\"h5\">{isSignup ? 'Sign up' : 'Sign In'}</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            isSignup && (\r\n                                <>\r\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\r\n                                </>\r\n                            )\r\n                        }\r\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\"/>\r\n                        <Input  name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword}/>\r\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\r\n                    </Grid>\r\n                    <Button type=\"submit\" fullWidth variant='contained' color=\"primary\" className={classes.submit}>\r\n                        { isSignup ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n                    <GoogleLogin \r\n                        clientId=\"981858319825-08s6umh6ffml64ufs60qqjpev3uu0atk.apps.googleusercontent.com\"\r\n                        render={(renderProps) => (\r\n                            <Button \r\n                                className={classes.googleButton} \r\n                                color='primary' \r\n                                fullWidth onClick={renderProps.onClick} \r\n                                disabled={renderProps.disabled} \r\n                                startIcon={<Icon />} \r\n                                variant=\"contained\"\r\n                            >\r\n                                Google Sign In\r\n                            </Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy=\"single_host_origin\"\r\n                    />  \r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Button onClick={switchMode}>\r\n                                    { isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Auth;"],"mappings":"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"},"metadata":{},"sourceType":"module"}